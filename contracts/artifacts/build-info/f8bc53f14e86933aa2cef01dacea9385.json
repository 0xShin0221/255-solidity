{
	"id": "f8bc53f14e86933aa2cef01dacea9385",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.26",
	"solcLongVersion": "0.4.26+commit.4563c3fc",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/assembly_sample.sol": {
				"content": "pragma solidity ^0.4.24;\ncontract SimpleContract {\n    function add() public  returns (uint) {\n        uint a = 1; \n        uint b = 2; \n        return (a+b);\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/assembly_sample.sol": {
				"SimpleContract": {
					"abi": [
						{
							"constant": false,
							"inputs": [],
							"name": "add",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/assembly_sample.sol\":25:166  contract SimpleContract {... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/assembly_sample.sol\":25:166  contract SimpleContract {... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/assembly_sample.sol\":25:166  contract SimpleContract {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x4f2be91f\n      eq\n      tag_2\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"contracts/assembly_sample.sol\":55:164  function add() public  returns (uint) {... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_3\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_3:\n        /* \"contracts/assembly_sample.sol\":55:164  function add() public  returns (uint) {... */\n      pop\n      tag_4\n      jump(tag_5)\n    tag_4:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_5:\n        /* \"contracts/assembly_sample.sol\":87:91  uint */\n      0x0\n        /* \"contracts/assembly_sample.sol\":103:109  uint a */\n      dup1\n        /* \"contracts/assembly_sample.sol\":124:130  uint b */\n      0x0\n        /* \"contracts/assembly_sample.sol\":112:113  1 */\n      0x1\n        /* \"contracts/assembly_sample.sol\":103:113  uint a = 1 */\n      swap2\n      pop\n        /* \"contracts/assembly_sample.sol\":133:134  2 */\n      0x2\n        /* \"contracts/assembly_sample.sol\":124:134  uint b = 2 */\n      swap1\n      pop\n        /* \"contracts/assembly_sample.sol\":155:156  b */\n      dup1\n        /* \"contracts/assembly_sample.sol\":153:154  a */\n      dup3\n        /* \"contracts/assembly_sample.sol\":153:156  a+b */\n      add\n        /* \"contracts/assembly_sample.sol\":145:157  return (a+b) */\n      swap3\n      pop\n        /* \"contracts/assembly_sample.sol\":55:164  function add() public  returns (uint) {... */\n      pop\n      pop\n      swap1\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820af98e124d0134c75526fd18ed9539ff155691661162487fe511a90af711b4c060029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b5060af8061001e6000396000f300608060405260043610603f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634f2be91f146044575b600080fd5b348015604f57600080fd5b506056606c565b6040518082815260200191505060405180910390f35b6000806000600191506002905080820192505050905600a165627a7a72305820af98e124d0134c75526fd18ed9539ff155691661162487fe511a90af711b4c060029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xAF DUP1 PUSH2 0x1E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x3F JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x4F2BE91F EQ PUSH1 0x44 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH1 0x4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x56 PUSH1 0x6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 SWAP2 POP PUSH1 0x2 SWAP1 POP DUP1 DUP3 ADD SWAP3 POP POP POP SWAP1 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xaf SWAP9 0xe1 0x24 0xd0 SGT 0x4c PUSH22 0x526FD18ED9539FF155691661162487FE511A90AF711B 0x4c MOD STOP 0x29 ",
							"sourceMap": "25:141:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25:141:0;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405260043610603f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634f2be91f146044575b600080fd5b348015604f57600080fd5b506056606c565b6040518082815260200191505060405180910390f35b6000806000600191506002905080820192505050905600a165627a7a72305820af98e124d0134c75526fd18ed9539ff155691661162487fe511a90af711b4c060029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x3F JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x4F2BE91F EQ PUSH1 0x44 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH1 0x4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x56 PUSH1 0x6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 SWAP2 POP PUSH1 0x2 SWAP1 POP DUP1 DUP3 ADD SWAP3 POP POP POP SWAP1 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xaf SWAP9 0xe1 0x24 0xd0 SGT 0x4c PUSH22 0x526FD18ED9539FF155691661162487FE511A90AF711B 0x4c MOD STOP 0x29 ",
							"sourceMap": "25:141:0:-;;;;;;;;;;;;;;;;;;;;;;;;55:109;;8:9:-1;5:2;;;30:1;27;20:12;5:2;55:109:0;;;;;;;;;;;;;;;;;;;;;;;;87:4;103:6;124;112:1;103:10;;133:1;124:10;;155:1;153;:3;145:12;;55:109;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "35000",
								"executionCost": "87",
								"totalCost": "35087"
							},
							"external": {
								"add()": "234"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 25,
									"end": 166,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 25,
									"end": 166,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 25,
									"end": 166,
									"name": "MSTORE"
								},
								{
									"begin": 25,
									"end": 166,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 25,
									"end": 166,
									"name": "POP"
								},
								{
									"begin": 25,
									"end": 166,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 166,
									"name": "DUP1"
								},
								{
									"begin": 25,
									"end": 166,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 166,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 25,
									"end": 166,
									"name": "CODECOPY"
								},
								{
									"begin": 25,
									"end": 166,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 25,
									"end": 166,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820af98e124d0134c75526fd18ed9539ff155691661162487fe511a90af711b4c060029",
									".code": [
										{
											"begin": 25,
											"end": 166,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 25,
											"end": 166,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25,
											"end": 166,
											"name": "MSTORE"
										},
										{
											"begin": 25,
											"end": 166,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 25,
											"end": 166,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 25,
											"end": 166,
											"name": "LT"
										},
										{
											"begin": 25,
											"end": 166,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 25,
											"end": 166,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 166,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25,
											"end": 166,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 25,
											"end": 166,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25,
											"end": 166,
											"name": "SWAP1"
										},
										{
											"begin": 25,
											"end": 166,
											"name": "DIV"
										},
										{
											"begin": 25,
											"end": 166,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 25,
											"end": 166,
											"name": "AND"
										},
										{
											"begin": 25,
											"end": 166,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 166,
											"name": "PUSH",
											"value": "4F2BE91F"
										},
										{
											"begin": 25,
											"end": 166,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 166,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 25,
											"end": 166,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 166,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 25,
											"end": 166,
											"name": "JUMPDEST"
										},
										{
											"begin": 25,
											"end": 166,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25,
											"end": 166,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 166,
											"name": "REVERT"
										},
										{
											"begin": 55,
											"end": 164,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 55,
											"end": 164,
											"name": "JUMPDEST"
										},
										{
											"begin": 55,
											"end": 164,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 55,
											"end": 164,
											"name": "POP"
										},
										{
											"begin": 55,
											"end": 164,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 55,
											"end": 164,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 55,
											"end": 164,
											"name": "JUMP"
										},
										{
											"begin": 55,
											"end": 164,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 55,
											"end": 164,
											"name": "JUMPDEST"
										},
										{
											"begin": 55,
											"end": 164,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 55,
											"end": 164,
											"name": "MLOAD"
										},
										{
											"begin": 55,
											"end": 164,
											"name": "DUP1"
										},
										{
											"begin": 55,
											"end": 164,
											"name": "DUP3"
										},
										{
											"begin": 55,
											"end": 164,
											"name": "DUP2"
										},
										{
											"begin": 55,
											"end": 164,
											"name": "MSTORE"
										},
										{
											"begin": 55,
											"end": 164,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 55,
											"end": 164,
											"name": "ADD"
										},
										{
											"begin": 55,
											"end": 164,
											"name": "SWAP2"
										},
										{
											"begin": 55,
											"end": 164,
											"name": "POP"
										},
										{
											"begin": 55,
											"end": 164,
											"name": "POP"
										},
										{
											"begin": 55,
											"end": 164,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 55,
											"end": 164,
											"name": "MLOAD"
										},
										{
											"begin": 55,
											"end": 164,
											"name": "DUP1"
										},
										{
											"begin": 55,
											"end": 164,
											"name": "SWAP2"
										},
										{
											"begin": 55,
											"end": 164,
											"name": "SUB"
										},
										{
											"begin": 55,
											"end": 164,
											"name": "SWAP1"
										},
										{
											"begin": 55,
											"end": 164,
											"name": "RETURN"
										},
										{
											"begin": 55,
											"end": 164,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 55,
											"end": 164,
											"name": "JUMPDEST"
										},
										{
											"begin": 87,
											"end": 91,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 103,
											"end": 109,
											"name": "DUP1"
										},
										{
											"begin": 124,
											"end": 130,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 112,
											"end": 113,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 103,
											"end": 113,
											"name": "SWAP2"
										},
										{
											"begin": 103,
											"end": 113,
											"name": "POP"
										},
										{
											"begin": 133,
											"end": 134,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 124,
											"end": 134,
											"name": "SWAP1"
										},
										{
											"begin": 124,
											"end": 134,
											"name": "POP"
										},
										{
											"begin": 155,
											"end": 156,
											"name": "DUP1"
										},
										{
											"begin": 153,
											"end": 154,
											"name": "DUP3"
										},
										{
											"begin": 153,
											"end": 156,
											"name": "ADD"
										},
										{
											"begin": 145,
											"end": 157,
											"name": "SWAP3"
										},
										{
											"begin": 145,
											"end": 157,
											"name": "POP"
										},
										{
											"begin": 55,
											"end": 164,
											"name": "POP"
										},
										{
											"begin": 55,
											"end": 164,
											"name": "POP"
										},
										{
											"begin": 55,
											"end": 164,
											"name": "SWAP1"
										},
										{
											"begin": 55,
											"end": 164,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"add()": "4f2be91f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"add\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/assembly_sample.sol\":\"SimpleContract\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/assembly_sample.sol\":{\"keccak256\":\"0xafb4feb306f33b39bed1c486f976337e10147d2f114fcded02a99acd2cddbd77\",\"urls\":[\"bzzr://7d135da3f0e91cc2810a09300b701140fb77ee3f96c2a814727e66b5f8047e4c\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "contracts/assembly_sample.sol:3:5: Warning: Function state mutability can be restricted to pure\n    function add() public  returns (uint) {\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 164,
					"file": "contracts/assembly_sample.sol",
					"start": 55
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/assembly_sample.sol": {
				"ast": {
					"absolutePath": "contracts/assembly_sample.sol",
					"exportedSymbols": {
						"SimpleContract": [
							21
						]
					},
					"id": 22,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 21,
							"linearizedBaseContracts": [
								21
							],
							"name": "SimpleContract",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "93:71:0",
										"statements": [
											{
												"assignments": [
													7
												],
												"declarations": [
													{
														"constant": false,
														"id": 7,
														"name": "a",
														"nodeType": "VariableDeclaration",
														"scope": 20,
														"src": "103:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 6,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "103:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 9,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "31",
													"id": 8,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "112:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "103:10:0"
											},
											{
												"assignments": [
													11
												],
												"declarations": [
													{
														"constant": false,
														"id": 11,
														"name": "b",
														"nodeType": "VariableDeclaration",
														"scope": 20,
														"src": "124:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 10,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "124:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 13,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "32",
													"id": 12,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "133:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_2_by_1",
														"typeString": "int_const 2"
													},
													"value": "2"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "124:10:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 16,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 14,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "153:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"argumentTypes": null,
																"id": 15,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "155:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "153:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 17,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "152:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 5,
												"id": 18,
												"nodeType": "Return",
												"src": "145:12:0"
											}
										]
									},
									"documentation": null,
									"id": 20,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "67:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "87:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "87:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "86:6:0"
									},
									"scope": 21,
									"src": "55:109:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 22,
							"src": "25:141:0"
						}
					],
					"src": "0:167:0"
				},
				"id": 0
			}
		}
	}
}