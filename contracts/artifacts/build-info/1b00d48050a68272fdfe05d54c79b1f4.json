{
	"id": "1b00d48050a68272fdfe05d54c79b1f4",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/10_reentranncyhack.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.6;\n\ninterface IReentranncy{\n    function withdraw(uint ammount) external returns(uint);\n    function balanceOf(address _who) external;\n}\n\ncontract ReentrancyHack {\n    IReentranncy reentrancy = IReentranncy(0x34889C648705e531acfB0561D77bB5b29C06AAb5);\n\n    uint public val;\n    constructor(uint v) public {\n            val = v;\n    }\n        function hackLevel() external {\n\n    }\n\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/10_reentranncyhack.sol": {
				"IReentranncy": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_who",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "ammount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ammount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/10_reentranncyhack.sol\":\"IReentranncy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/10_reentranncyhack.sol\":{\"keccak256\":\"0xb38a9302c80babe64da402c8d71a450b9ad352bad4c9741fce3bbaeced470ff2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f7e1ef78db57b9988afbb8a2d06f0fc0258a2dc94b9558aad91a0b5ed3d1097\",\"dweb:/ipfs/QmaV8SAgdtgSV9bSE46ts9yV7QdwozXiaDYMqWk2bTqXHt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ReentrancyHack": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "v",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "hackLevel",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "val",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/10_reentranncyhack.sol\":191:436  contract ReentrancyHack {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/10_reentranncyhack.sol\":260:302  0x34889C648705e531acfB0561D77bB5b29C06AAb5 */\n  0x34889c648705e531acfb0561d77bb5b29c06aab5\n    /* \"contracts/10_reentranncyhack.sol\":221:303  IReentranncy reentrancy = IReentranncy(0x34889C648705e531acfB0561D77bB5b29C06AAb5) */\n  0x00\n  dup1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/10_reentranncyhack.sol\":331:386  constructor(uint v) public {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/10_reentranncyhack.sol\":378:379  v */\n  dup1\n    /* \"contracts/10_reentranncyhack.sol\":372:375  val */\n  0x01\n    /* \"contracts/10_reentranncyhack.sol\":372:379  val = v */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/10_reentranncyhack.sol\":331:386  constructor(uint v) public {... */\n  pop\n    /* \"contracts/10_reentranncyhack.sol\":191:436  contract ReentrancyHack {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_11:\n    /* \"#utility.yul\":490:514   */\n  tag_19\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_10\n  jump\t// in\ntag_19:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_20\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  dup1\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_20:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_12:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_22\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:1045   */\ntag_3:\n    /* \"#utility.yul\":764:770   */\n  0x00\n    /* \"#utility.yul\":813:815   */\n  0x20\n    /* \"#utility.yul\":801:810   */\n  dup3\n    /* \"#utility.yul\":792:799   */\n  dup5\n    /* \"#utility.yul\":788:811   */\n  sub\n    /* \"#utility.yul\":784:816   */\n  slt\n    /* \"#utility.yul\":781:900   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":819:898   */\n  tag_25\n  tag_8\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":781:900   */\ntag_24:\n    /* \"#utility.yul\":939:940   */\n  0x00\n    /* \"#utility.yul\":964:1028   */\n  tag_26\n    /* \"#utility.yul\":1020:1027   */\n  dup5\n    /* \"#utility.yul\":1011:1017   */\n  dup3\n    /* \"#utility.yul\":1000:1009   */\n  dup6\n    /* \"#utility.yul\":996:1018   */\n  add\n    /* \"#utility.yul\":964:1028   */\n  tag_12\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":954:1028   */\n  swap2\n  pop\n    /* \"#utility.yul\":910:1038   */\n  pop\n    /* \"#utility.yul\":694:1045   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/10_reentranncyhack.sol\":191:436  contract ReentrancyHack {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/10_reentranncyhack.sol\":191:436  contract ReentrancyHack {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3c6bb436\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xcd6b4b55\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/10_reentranncyhack.sol\":310:325  uint public val */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/10_reentranncyhack.sol\":395:433  function hackLevel() external {... */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      stop\n        /* \"contracts/10_reentranncyhack.sol\":310:325  uint public val */\n    tag_6:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"contracts/10_reentranncyhack.sol\":395:433  function hackLevel() external {... */\n    tag_10:\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_12:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_13:\n        /* \"#utility.yul\":177:201   */\n      tag_17\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_12\n      jump\t// in\n    tag_17:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_8:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_19\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_13\n      jump\t// in\n    tag_19:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212208b1f638dbcb4b59cf270591bfc331c267c91e36c7c83112083fd106b850b615c64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_32": {
									"entryPoint": null,
									"id": 32,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 185,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 206,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 152,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 147,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 162,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1048:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:1"
															},
															"nodeType": "YulIf",
															"src": "470:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:1",
														"type": ""
													}
												],
												"src": "417:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "608:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "618:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "627:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "649:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "649:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "586:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "594:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "602:5:1",
														"type": ""
													}
												],
												"src": "545:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "771:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "817:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "819:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "819:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "819:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "792:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "801:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "788:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "788:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "813:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "784:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "784:32:1"
															},
															"nodeType": "YulIf",
															"src": "781:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "910:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "925:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "939:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "929:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "954:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1000:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1011:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "996:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "996:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1020:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "964:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "964:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "954:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "741:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "752:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "764:6:1",
														"type": ""
													}
												],
												"src": "694:351:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040527334889c648705e531acfb0561d77bb5b29c06aab56000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561006457600080fd5b506040516101d03803806101d0833981810160405281019061008691906100ce565b80600181905550506100fb565b600080fd5b6000819050919050565b6100ab81610098565b81146100b657600080fd5b50565b6000815190506100c8816100a2565b92915050565b6000602082840312156100e4576100e3610093565b5b60006100f2848285016100b9565b91505092915050565b60c7806101096000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c80633c6bb436146037578063cd6b4b55146051575b600080fd5b603d6059565b604051604891906078565b60405180910390f35b6057605f565b005b60015481565b565b6000819050919050565b6072816061565b82525050565b6000602082019050608b6000830184606b565b9291505056fea26469706673582212208b1f638dbcb4b59cf270591bfc331c267c91e36c7c83112083fd106b850b615c64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0x34889C648705E531ACFB0561D77BB5B29C06AAB5 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1D0 CODESIZE SUB DUP1 PUSH2 0x1D0 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x86 SWAP2 SWAP1 PUSH2 0xCE JUMP JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP PUSH2 0xFB JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAB DUP2 PUSH2 0x98 JUMP JUMPDEST DUP2 EQ PUSH2 0xB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xC8 DUP2 PUSH2 0xA2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE4 JUMPI PUSH2 0xE3 PUSH2 0x93 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF2 DUP5 DUP3 DUP6 ADD PUSH2 0xB9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xC7 DUP1 PUSH2 0x109 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3C6BB436 EQ PUSH1 0x37 JUMPI DUP1 PUSH4 0xCD6B4B55 EQ PUSH1 0x51 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3D PUSH1 0x59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x48 SWAP2 SWAP1 PUSH1 0x78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x57 PUSH1 0x5F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x72 DUP2 PUSH1 0x61 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x8B PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0x6B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP12 0x1F PUSH4 0x8DBCB4B5 SWAP13 CALLCODE PUSH17 0x591BFC331C267C91E36C7C83112083FD10 PUSH12 0x850B615C64736F6C63430008 0xD STOP CALLER ",
							"sourceMap": "191:245:0:-:0;;;260:42;221:82;;;;;;;;;;;;;;;;;;;;331:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;378:1;372:3;:7;;;;331:55;191:245;;88:117:1;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:351::-;764:6;813:2;801:9;792:7;788:23;784:32;781:119;;;819:79;;:::i;:::-;781:119;939:1;964:64;1020:7;1011:6;1000:9;996:22;964:64;:::i;:::-;954:74;;910:128;694:351;;;;:::o;191:245:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@hackLevel_36": {
									"entryPoint": 95,
									"id": 36,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@val_22": {
									"entryPoint": 89,
									"id": 22,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 107,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 120,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 97,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:439:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:1",
														"type": ""
													}
												],
												"src": "90:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:1",
														"type": ""
													}
												],
												"src": "214:222:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506004361060325760003560e01c80633c6bb436146037578063cd6b4b55146051575b600080fd5b603d6059565b604051604891906078565b60405180910390f35b6057605f565b005b60015481565b565b6000819050919050565b6072816061565b82525050565b6000602082019050608b6000830184606b565b9291505056fea26469706673582212208b1f638dbcb4b59cf270591bfc331c267c91e36c7c83112083fd106b850b615c64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3C6BB436 EQ PUSH1 0x37 JUMPI DUP1 PUSH4 0xCD6B4B55 EQ PUSH1 0x51 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3D PUSH1 0x59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x48 SWAP2 SWAP1 PUSH1 0x78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x57 PUSH1 0x5F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x72 DUP2 PUSH1 0x61 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x8B PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0x6B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP12 0x1F PUSH4 0x8DBCB4B5 SWAP13 CALLCODE PUSH17 0x591BFC331C267C91E36C7C83112083FD10 PUSH12 0x850B615C64736F6C63430008 0xD STOP CALLER ",
							"sourceMap": "191:245:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;310:15;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;395:38;;;:::i;:::-;;310:15;;;;:::o;395:38::-;:::o;7:77:1:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "39800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"hackLevel()": "144",
								"val()": "2407"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 191,
									"end": 436,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 191,
									"end": 436,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 191,
									"end": 436,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 260,
									"end": 302,
									"name": "PUSH",
									"source": 0,
									"value": "34889C648705E531ACFB0561D77BB5B29C06AAB5"
								},
								{
									"begin": 221,
									"end": 303,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 221,
									"end": 303,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 221,
									"end": 303,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 221,
									"end": 303,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 221,
									"end": 303,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 221,
									"end": 303,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 221,
									"end": 303,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 221,
									"end": 303,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 221,
									"end": 303,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 221,
									"end": 303,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 221,
									"end": 303,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 221,
									"end": 303,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 221,
									"end": 303,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 221,
									"end": 303,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 221,
									"end": 303,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 221,
									"end": 303,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 221,
									"end": 303,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 221,
									"end": 303,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 221,
									"end": 303,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 221,
									"end": 303,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 331,
									"end": 386,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 331,
									"end": 386,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 331,
									"end": 386,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 331,
									"end": 386,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 331,
									"end": 386,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 331,
									"end": 386,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 331,
									"end": 386,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 331,
									"end": 386,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 331,
									"end": 386,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 331,
									"end": 386,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 331,
									"end": 386,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 331,
									"end": 386,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 331,
									"end": 386,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 331,
									"end": 386,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 331,
									"end": 386,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 331,
									"end": 386,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 331,
									"end": 386,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 331,
									"end": 386,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 331,
									"end": 386,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 331,
									"end": 386,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 331,
									"end": 386,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 331,
									"end": 386,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 331,
									"end": 386,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 331,
									"end": 386,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 331,
									"end": 386,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 331,
									"end": 386,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 331,
									"end": 386,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 331,
									"end": 386,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 331,
									"end": 386,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 331,
									"end": 386,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 331,
									"end": 386,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 331,
									"end": 386,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 331,
									"end": 386,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 331,
									"end": 386,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 331,
									"end": 386,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 378,
									"end": 379,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 372,
									"end": 375,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 372,
									"end": 379,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 372,
									"end": 379,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 372,
									"end": 379,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 372,
									"end": 379,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 331,
									"end": 386,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 191,
									"end": 436,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 191,
									"end": 436,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 764,
									"end": 770,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 813,
									"end": 815,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 801,
									"end": 810,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 792,
									"end": 799,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 788,
									"end": 811,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 784,
									"end": 816,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 781,
									"end": 900,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 781,
									"end": 900,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 781,
									"end": 900,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 819,
									"end": 898,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 819,
									"end": 898,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 819,
									"end": 898,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 819,
									"end": 898,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 819,
									"end": 898,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 781,
									"end": 900,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 781,
									"end": 900,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 939,
									"end": 940,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 1020,
									"end": 1027,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1011,
									"end": 1017,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1000,
									"end": 1009,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1018,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 954,
									"end": 1028,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 954,
									"end": 1028,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 910,
									"end": 1038,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 191,
									"end": 436,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 191,
									"end": 436,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 191,
									"end": 436,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 191,
									"end": 436,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 191,
									"end": 436,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 191,
									"end": 436,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 191,
									"end": 436,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 191,
									"end": 436,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 191,
									"end": 436,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208b1f638dbcb4b59cf270591bfc331c267c91e36c7c83112083fd106b850b615c64736f6c634300080d0033",
									".code": [
										{
											"begin": 191,
											"end": 436,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 191,
											"end": 436,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 191,
											"end": 436,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 191,
											"end": 436,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 191,
											"end": 436,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 191,
											"end": 436,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 191,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 191,
											"end": 436,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 191,
											"end": 436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 191,
											"end": 436,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 191,
											"end": 436,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 191,
											"end": 436,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 191,
											"end": 436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 191,
											"end": 436,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 191,
											"end": 436,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 191,
											"end": 436,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 191,
											"end": 436,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 191,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 191,
											"end": 436,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 191,
											"end": 436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 191,
											"end": 436,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 191,
											"end": 436,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 191,
											"end": 436,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 191,
											"end": 436,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 191,
											"end": 436,
											"name": "PUSH",
											"source": 0,
											"value": "3C6BB436"
										},
										{
											"begin": 191,
											"end": 436,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 191,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 191,
											"end": 436,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 191,
											"end": 436,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 191,
											"end": 436,
											"name": "PUSH",
											"source": 0,
											"value": "CD6B4B55"
										},
										{
											"begin": 191,
											"end": 436,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 191,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 191,
											"end": 436,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 191,
											"end": 436,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 191,
											"end": 436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 191,
											"end": 436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 191,
											"end": 436,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 191,
											"end": 436,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 310,
											"end": 325,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 310,
											"end": 325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 310,
											"end": 325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 310,
											"end": 325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 310,
											"end": 325,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 310,
											"end": 325,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 310,
											"end": 325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 310,
											"end": 325,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 310,
											"end": 325,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 310,
											"end": 325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 310,
											"end": 325,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 310,
											"end": 325,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 310,
											"end": 325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 310,
											"end": 325,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 310,
											"end": 325,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 310,
											"end": 325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 310,
											"end": 325,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 310,
											"end": 325,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 310,
											"end": 325,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 310,
											"end": 325,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 310,
											"end": 325,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 310,
											"end": 325,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 310,
											"end": 325,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 395,
											"end": 433,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 395,
											"end": 433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 395,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 395,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 395,
											"end": 433,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 395,
											"end": 433,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 395,
											"end": 433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 395,
											"end": 433,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 310,
											"end": 325,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 310,
											"end": 325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 310,
											"end": 325,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 310,
											"end": 325,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 310,
											"end": 325,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 310,
											"end": 325,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 395,
											"end": 433,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 395,
											"end": 433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 395,
											"end": 433,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"hackLevel()": "cd6b4b55",
							"val()": "3c6bb436"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"v\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"hackLevel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"val\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/10_reentranncyhack.sol\":\"ReentrancyHack\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/10_reentranncyhack.sol\":{\"keccak256\":\"0xb38a9302c80babe64da402c8d71a450b9ad352bad4c9741fce3bbaeced470ff2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f7e1ef78db57b9988afbb8a2d06f0fc0258a2dc94b9558aad91a0b5ed3d1097\",\"dweb:/ipfs/QmaV8SAgdtgSV9bSE46ts9yV7QdwozXiaDYMqWk2bTqXHt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 20,
								"contract": "contracts/10_reentranncyhack.sol:ReentrancyHack",
								"label": "reentrancy",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IReentranncy)14"
							},
							{
								"astId": 22,
								"contract": "contracts/10_reentranncyhack.sol:ReentrancyHack",
								"label": "val",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_contract(IReentranncy)14": {
								"encoding": "inplace",
								"label": "contract IReentranncy",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --> contracts/10_reentranncyhack.sol:13:5:\n   |\n13 |     constructor(uint v) public {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 386,
					"file": "contracts/10_reentranncyhack.sol",
					"start": 331
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/10_reentranncyhack.sol": {
				"ast": {
					"absolutePath": "contracts/10_reentranncyhack.sol",
					"exportedSymbols": {
						"IReentranncy": [
							14
						],
						"ReentrancyHack": [
							37
						]
					},
					"id": 38,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IReentranncy",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 14,
							"linearizedBaseContracts": [
								14
							],
							"name": "IReentranncy",
							"nameLocation": "67:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "2e1a7d4d",
									"id": 8,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "94:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "ammount",
												"nameLocation": "108:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "103:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "103:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "102:14:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "134:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "134:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "133:6:0"
									},
									"scope": 14,
									"src": "85:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 13,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "154:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "_who",
												"nameLocation": "172:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "164:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 9,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "164:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "163:14:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "186:0:0"
									},
									"scope": 14,
									"src": "145:42:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 38,
							"src": "57:132:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ReentrancyHack",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 37,
							"linearizedBaseContracts": [
								37
							],
							"name": "ReentrancyHack",
							"nameLocation": "200:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 20,
									"mutability": "mutable",
									"name": "reentrancy",
									"nameLocation": "234:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 37,
									"src": "221:82:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IReentranncy_$14",
										"typeString": "contract IReentranncy"
									},
									"typeName": {
										"id": 16,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 15,
											"name": "IReentranncy",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 14,
											"src": "221:12:0"
										},
										"referencedDeclaration": 14,
										"src": "221:12:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IReentranncy_$14",
											"typeString": "contract IReentranncy"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307833343838394336343837303565353331616366423035363144373762423562323943303641416235",
												"id": 18,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "260:42:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0x34889C648705e531acfB0561D77bB5b29C06AAb5"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 17,
											"name": "IReentranncy",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 14,
											"src": "247:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IReentranncy_$14_$",
												"typeString": "type(contract IReentranncy)"
											}
										},
										"id": 19,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "247:56:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IReentranncy_$14",
											"typeString": "contract IReentranncy"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "3c6bb436",
									"id": 22,
									"mutability": "mutable",
									"name": "val",
									"nameLocation": "322:3:0",
									"nodeType": "VariableDeclaration",
									"scope": 37,
									"src": "310:15:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 21,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "310:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "358:28:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 27,
														"name": "val",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "372:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 28,
														"name": "v",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "378:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "372:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 30,
												"nodeType": "ExpressionStatement",
												"src": "372:7:0"
											}
										]
									},
									"id": 32,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "348:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "343:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "343:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "342:8:0"
									},
									"returnParameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "358:0:0"
									},
									"scope": 37,
									"src": "331:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 35,
										"nodeType": "Block",
										"src": "425:8:0",
										"statements": []
									},
									"functionSelector": "cd6b4b55",
									"id": 36,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hackLevel",
									"nameLocation": "404:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "413:2:0"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "425:0:0"
									},
									"scope": 37,
									"src": "395:38:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 38,
							"src": "191:245:0",
							"usedErrors": []
						}
					],
					"src": "32:404:0"
				},
				"id": 0
			}
		}
	}
}