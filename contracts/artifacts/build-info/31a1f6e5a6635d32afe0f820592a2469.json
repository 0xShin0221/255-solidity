{
	"id": "31a1f6e5a6635d32afe0f820592a2469",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/10_reentranncyhack.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.6;\n\ninterface IReentranncy{\n    function withdraw(uint ammount) external returns(uint);\n    function balanceOf(address _who) external;\n}\n\ncontract ReentrancyHack {\n    IReentranncy reentrancy = IReentranncy(0xCA04c9bdD57177A0BADA1e1eaE3E0E682B29E28F);\n\n    function give() public payable returns(uint) {\n        require(msg.value > 0);\n        return address(this).balance;\n    }\n    function hack(uint val) public {\n        reentrancy.withdraw(val);\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/10_reentranncyhack.sol": {
				"IReentranncy": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_who",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "ammount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ammount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/10_reentranncyhack.sol\":\"IReentranncy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/10_reentranncyhack.sol\":{\"keccak256\":\"0x0bf77cf171fb6736e2693d1d9f91b5a2408d13b849fda12b74beada97363e7c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d456b2de647e18d83949525ff412bf54701042906952d2d11cba5708afeff125\",\"dweb:/ipfs/QmZ9YsqGGJmnvKEmQhxY7PFGFWMQbp439VrP4fzGUdr2Sw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ReentrancyHack": {
					"abi": [
						{
							"inputs": [],
							"name": "give",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "val",
									"type": "uint256"
								}
							],
							"name": "hack",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/10_reentranncyhack.sol\":191:511  contract ReentrancyHack {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/10_reentranncyhack.sol\":260:302  0xCA04c9bdD57177A0BADA1e1eaE3E0E682B29E28F */\n  0xca04c9bdd57177a0bada1e1eae3e0e682b29e28f\n    /* \"contracts/10_reentranncyhack.sol\":221:303  IReentranncy reentrancy = IReentranncy(0xCA04c9bdD57177A0BADA1e1eaE3E0E682B29E28F) */\n  0x00\n  dup1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/10_reentranncyhack.sol\":191:511  contract ReentrancyHack {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/10_reentranncyhack.sol\":191:511  contract ReentrancyHack {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x25565cdd\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x9e96a23a\n      eq\n      tag_3\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/10_reentranncyhack.sol\":437:509  function hack(uint val) public {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_4\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_4:\n      pop\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      stop\n        /* \"contracts/10_reentranncyhack.sol\":310:432  function give() public payable returns(uint) {... */\n    tag_3:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/10_reentranncyhack.sol\":437:509  function hack(uint val) public {... */\n    tag_8:\n        /* \"contracts/10_reentranncyhack.sol\":478:488  reentrancy */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/10_reentranncyhack.sol\":478:497  reentrancy.withdraw */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x2e1a7d4d\n        /* \"contracts/10_reentranncyhack.sol\":498:501  val */\n      dup3\n        /* \"contracts/10_reentranncyhack.sol\":478:502  reentrancy.withdraw(val) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_14\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_14:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_16\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_16:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      pop\n        /* \"contracts/10_reentranncyhack.sol\":437:509  function hack(uint val) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/10_reentranncyhack.sol\":310:432  function give() public payable returns(uint) {... */\n    tag_10:\n        /* \"contracts/10_reentranncyhack.sol\":349:353  uint */\n      0x00\n        /* \"contracts/10_reentranncyhack.sol\":385:386  0 */\n      dup1\n        /* \"contracts/10_reentranncyhack.sol\":373:382  msg.value */\n      callvalue\n        /* \"contracts/10_reentranncyhack.sol\":373:386  msg.value > 0 */\n      gt\n        /* \"contracts/10_reentranncyhack.sol\":365:387  require(msg.value > 0) */\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n        /* \"contracts/10_reentranncyhack.sol\":404:425  address(this).balance */\n      selfbalance\n        /* \"contracts/10_reentranncyhack.sol\":397:425  return address(this).balance */\n      swap1\n      pop\n        /* \"contracts/10_reentranncyhack.sol\":310:432  function give() public payable returns(uint) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_22:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_24:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_25:\n        /* \"#utility.yul\":490:514   */\n      tag_35\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_24\n      jump\t// in\n    tag_35:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_36\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_36:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_26:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_38\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_25\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_7:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_40\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_41\n      tag_22\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":766:885   */\n    tag_40:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_42\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_26\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1143   */\n    tag_27:\n        /* \"#utility.yul\":1112:1136   */\n      tag_44\n        /* \"#utility.yul\":1130:1135   */\n      dup2\n        /* \"#utility.yul\":1112:1136   */\n      tag_24\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":1107:1110   */\n      dup3\n        /* \"#utility.yul\":1100:1137   */\n      mstore\n        /* \"#utility.yul\":1025:1143   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1149:1371   */\n    tag_12:\n        /* \"#utility.yul\":1242:1246   */\n      0x00\n        /* \"#utility.yul\":1280:1282   */\n      0x20\n        /* \"#utility.yul\":1269:1278   */\n      dup3\n        /* \"#utility.yul\":1265:1283   */\n      add\n        /* \"#utility.yul\":1257:1283   */\n      swap1\n      pop\n        /* \"#utility.yul\":1293:1364   */\n      tag_46\n        /* \"#utility.yul\":1361:1362   */\n      0x00\n        /* \"#utility.yul\":1350:1359   */\n      dup4\n        /* \"#utility.yul\":1346:1363   */\n      add\n        /* \"#utility.yul\":1337:1343   */\n      dup5\n        /* \"#utility.yul\":1293:1364   */\n      tag_27\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":1149:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1520   */\n    tag_28:\n        /* \"#utility.yul\":1434:1439   */\n      0x00\n        /* \"#utility.yul\":1465:1471   */\n      dup2\n        /* \"#utility.yul\":1459:1472   */\n      mload\n        /* \"#utility.yul\":1450:1472   */\n      swap1\n      pop\n        /* \"#utility.yul\":1481:1514   */\n      tag_48\n        /* \"#utility.yul\":1508:1513   */\n      dup2\n        /* \"#utility.yul\":1481:1514   */\n      tag_25\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":1377:1520   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1526:1877   */\n    tag_18:\n        /* \"#utility.yul\":1596:1602   */\n      0x00\n        /* \"#utility.yul\":1645:1647   */\n      0x20\n        /* \"#utility.yul\":1633:1642   */\n      dup3\n        /* \"#utility.yul\":1624:1631   */\n      dup5\n        /* \"#utility.yul\":1620:1643   */\n      sub\n        /* \"#utility.yul\":1616:1648   */\n      slt\n        /* \"#utility.yul\":1613:1732   */\n      iszero\n      tag_50\n      jumpi\n        /* \"#utility.yul\":1651:1730   */\n      tag_51\n      tag_22\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":1613:1732   */\n    tag_50:\n        /* \"#utility.yul\":1771:1772   */\n      0x00\n        /* \"#utility.yul\":1796:1860   */\n      tag_52\n        /* \"#utility.yul\":1852:1859   */\n      dup5\n        /* \"#utility.yul\":1843:1849   */\n      dup3\n        /* \"#utility.yul\":1832:1841   */\n      dup6\n        /* \"#utility.yul\":1828:1850   */\n      add\n        /* \"#utility.yul\":1796:1860   */\n      tag_28\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":1786:1860   */\n      swap2\n      pop\n        /* \"#utility.yul\":1742:1870   */\n      pop\n        /* \"#utility.yul\":1526:1877   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212208a52681b33bc47ecb422c53564a73744efd5f721dd264816f783e193b4ac345564736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405273ca04c9bdd57177a0bada1e1eae3e0e682b29e28f6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561006457600080fd5b50610233806100746000396000f3fe6080604052600436106100295760003560e01c806325565cdd1461002e5780639e96a23a14610057575b600080fd5b34801561003a57600080fd5b5061005560048036038101906100509190610164565b610075565b005b61005f610115565b60405161006c91906101a0565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d826040518263ffffffff1660e01b81526004016100ce91906101a0565b6020604051808303816000875af11580156100ed573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061011191906101d0565b5050565b600080341161012357600080fd5b47905090565b600080fd5b6000819050919050565b6101418161012e565b811461014c57600080fd5b50565b60008135905061015e81610138565b92915050565b60006020828403121561017a57610179610129565b5b60006101888482850161014f565b91505092915050565b61019a8161012e565b82525050565b60006020820190506101b56000830184610191565b92915050565b6000815190506101ca81610138565b92915050565b6000602082840312156101e6576101e5610129565b5b60006101f4848285016101bb565b9150509291505056fea26469706673582212208a52681b33bc47ecb422c53564a73744efd5f721dd264816f783e193b4ac345564736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0xCA04C9BDD57177A0BADA1E1EAE3E0E682B29E28F PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x233 DUP1 PUSH2 0x74 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x25565CDD EQ PUSH2 0x2E JUMPI DUP1 PUSH4 0x9E96A23A EQ PUSH2 0x57 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x164 JUMP JUMPDEST PUSH2 0x75 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5F PUSH2 0x115 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C SWAP2 SWAP1 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2E1A7D4D DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x111 SWAP2 SWAP1 PUSH2 0x1D0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 CALLVALUE GT PUSH2 0x123 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x141 DUP2 PUSH2 0x12E JUMP JUMPDEST DUP2 EQ PUSH2 0x14C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15E DUP2 PUSH2 0x138 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17A JUMPI PUSH2 0x179 PUSH2 0x129 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x188 DUP5 DUP3 DUP6 ADD PUSH2 0x14F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19A DUP2 PUSH2 0x12E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x191 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1CA DUP2 PUSH2 0x138 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E6 JUMPI PUSH2 0x1E5 PUSH2 0x129 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F4 DUP5 DUP3 DUP6 ADD PUSH2 0x1BB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 MSTORE PUSH9 0x1B33BC47ECB422C535 PUSH5 0xA73744EFD5 0xF7 0x21 0xDD 0x26 BASEFEE AND 0xF7 DUP4 0xE1 SWAP4 0xB4 0xAC CALLVALUE SSTORE PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "191:320:0:-:0;;;260:42;221:82;;;;;;;;;;;;;;;;;;;;191:320;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@give_39": {
									"entryPoint": 277,
									"id": 39,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hack_51": {
									"entryPoint": 117,
									"id": 51,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_uint256": {
									"entryPoint": 335,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 443,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 356,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 464,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 401,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 416,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 302,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 297,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 312,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1880:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:1"
															},
															"nodeType": "YulIf",
															"src": "470:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:1",
														"type": ""
													}
												],
												"src": "417:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:1",
														"type": ""
													}
												],
												"src": "545:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "756:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "802:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "798:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "769:32:1"
															},
															"nodeType": "YulIf",
															"src": "766:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "895:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "924:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "914:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "939:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "726:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "737:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "749:6:1",
														"type": ""
													}
												],
												"src": "690:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1090:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1107:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1130:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1112:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1112:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1100:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1100:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1100:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1078:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1085:3:1",
														"type": ""
													}
												],
												"src": "1025:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1247:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1257:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1269:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1280:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1265:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1265:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1257:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1337:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1350:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1361:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1346:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1346:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1293:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1293:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1219:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1231:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1242:4:1",
														"type": ""
													}
												],
												"src": "1149:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1440:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1450:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1465:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1459:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1459:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1450:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1508:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1481:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1481:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1481:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1418:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1426:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1434:5:1",
														"type": ""
													}
												],
												"src": "1377:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1603:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1649:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1651:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1651:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1651:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1624:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1633:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1620:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1620:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1645:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1616:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1616:32:1"
															},
															"nodeType": "YulIf",
															"src": "1613:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1742:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1757:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1771:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1761:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1786:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1832:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1843:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1828:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1828:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1852:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1796:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1796:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1786:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1573:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1584:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1596:6:1",
														"type": ""
													}
												],
												"src": "1526:351:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100295760003560e01c806325565cdd1461002e5780639e96a23a14610057575b600080fd5b34801561003a57600080fd5b5061005560048036038101906100509190610164565b610075565b005b61005f610115565b60405161006c91906101a0565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d826040518263ffffffff1660e01b81526004016100ce91906101a0565b6020604051808303816000875af11580156100ed573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061011191906101d0565b5050565b600080341161012357600080fd5b47905090565b600080fd5b6000819050919050565b6101418161012e565b811461014c57600080fd5b50565b60008135905061015e81610138565b92915050565b60006020828403121561017a57610179610129565b5b60006101888482850161014f565b91505092915050565b61019a8161012e565b82525050565b60006020820190506101b56000830184610191565b92915050565b6000815190506101ca81610138565b92915050565b6000602082840312156101e6576101e5610129565b5b60006101f4848285016101bb565b9150509291505056fea26469706673582212208a52681b33bc47ecb422c53564a73744efd5f721dd264816f783e193b4ac345564736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x25565CDD EQ PUSH2 0x2E JUMPI DUP1 PUSH4 0x9E96A23A EQ PUSH2 0x57 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x164 JUMP JUMPDEST PUSH2 0x75 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5F PUSH2 0x115 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C SWAP2 SWAP1 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2E1A7D4D DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x111 SWAP2 SWAP1 PUSH2 0x1D0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 CALLVALUE GT PUSH2 0x123 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x141 DUP2 PUSH2 0x12E JUMP JUMPDEST DUP2 EQ PUSH2 0x14C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15E DUP2 PUSH2 0x138 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17A JUMPI PUSH2 0x179 PUSH2 0x129 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x188 DUP5 DUP3 DUP6 ADD PUSH2 0x14F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19A DUP2 PUSH2 0x12E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x191 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1CA DUP2 PUSH2 0x138 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E6 JUMPI PUSH2 0x1E5 PUSH2 0x129 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F4 DUP5 DUP3 DUP6 ADD PUSH2 0x1BB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 MSTORE PUSH9 0x1B33BC47ECB422C535 PUSH5 0xA73744EFD5 0xF7 0x21 0xDD 0x26 BASEFEE AND 0xF7 DUP4 0xE1 SWAP4 0xB4 0xAC CALLVALUE SSTORE PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "191:320:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;437:72;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;310:122;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;437:72;478:10;;;;;;;;;;:19;;;498:3;478:24;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;437:72;:::o;310:122::-;349:4;385:1;373:9;:13;365:22;;;;;;404:21;397:28;;310:122;:::o;88:117:1:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:118::-;1112:24;1130:5;1112:24;:::i;:::-;1107:3;1100:37;1025:118;;:::o;1149:222::-;1242:4;1280:2;1269:9;1265:18;1257:26;;1293:71;1361:1;1350:9;1346:17;1337:6;1293:71;:::i;:::-;1149:222;;;;:::o;1377:143::-;1434:5;1465:6;1459:13;1450:22;;1481:33;1508:5;1481:33;:::i;:::-;1377:143;;;;:::o;1526:351::-;1596:6;1645:2;1633:9;1624:7;1620:23;1616:32;1613:119;;;1651:79;;:::i;:::-;1613:119;1771:1;1796:64;1852:7;1843:6;1832:9;1828:22;1796:64;:::i;:::-;1786:74;;1742:128;1526:351;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "112600",
								"executionCost": "24426",
								"totalCost": "137026"
							},
							"external": {
								"give()": "337",
								"hack(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 191,
									"end": 511,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 191,
									"end": 511,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 191,
									"end": 511,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 260,
									"end": 302,
									"name": "PUSH",
									"source": 0,
									"value": "CA04C9BDD57177A0BADA1E1EAE3E0E682B29E28F"
								},
								{
									"begin": 221,
									"end": 303,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 221,
									"end": 303,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 221,
									"end": 303,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 221,
									"end": 303,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 221,
									"end": 303,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 221,
									"end": 303,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 221,
									"end": 303,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 221,
									"end": 303,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 221,
									"end": 303,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 221,
									"end": 303,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 221,
									"end": 303,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 221,
									"end": 303,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 221,
									"end": 303,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 221,
									"end": 303,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 221,
									"end": 303,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 221,
									"end": 303,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 221,
									"end": 303,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 221,
									"end": 303,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 221,
									"end": 303,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 221,
									"end": 303,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 191,
									"end": 511,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 191,
									"end": 511,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 191,
									"end": 511,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 191,
									"end": 511,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 191,
									"end": 511,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 191,
									"end": 511,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 191,
									"end": 511,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 191,
									"end": 511,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 191,
									"end": 511,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 191,
									"end": 511,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 191,
									"end": 511,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 191,
									"end": 511,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 191,
									"end": 511,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 191,
									"end": 511,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 191,
									"end": 511,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 191,
									"end": 511,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 191,
									"end": 511,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 191,
									"end": 511,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208a52681b33bc47ecb422c53564a73744efd5f721dd264816f783e193b4ac345564736f6c634300080d0033",
									".code": [
										{
											"begin": 191,
											"end": 511,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 191,
											"end": 511,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 191,
											"end": 511,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 191,
											"end": 511,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 191,
											"end": 511,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 191,
											"end": 511,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 191,
											"end": 511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 191,
											"end": 511,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 191,
											"end": 511,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 191,
											"end": 511,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 191,
											"end": 511,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 191,
											"end": 511,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 191,
											"end": 511,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 191,
											"end": 511,
											"name": "PUSH",
											"source": 0,
											"value": "25565CDD"
										},
										{
											"begin": 191,
											"end": 511,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 191,
											"end": 511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 191,
											"end": 511,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 191,
											"end": 511,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 191,
											"end": 511,
											"name": "PUSH",
											"source": 0,
											"value": "9E96A23A"
										},
										{
											"begin": 191,
											"end": 511,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 191,
											"end": 511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 191,
											"end": 511,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 191,
											"end": 511,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 191,
											"end": 511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 191,
											"end": 511,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 191,
											"end": 511,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 191,
											"end": 511,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 437,
											"end": 509,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 437,
											"end": 509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 437,
											"end": 509,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 437,
											"end": 509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 437,
											"end": 509,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 437,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 437,
											"end": 509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 437,
											"end": 509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 437,
											"end": 509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 437,
											"end": 509,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 437,
											"end": 509,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 437,
											"end": 509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 437,
											"end": 509,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 437,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 437,
											"end": 509,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 437,
											"end": 509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 437,
											"end": 509,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 437,
											"end": 509,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 437,
											"end": 509,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 437,
											"end": 509,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 437,
											"end": 509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 437,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 437,
											"end": 509,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 437,
											"end": 509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 437,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 437,
											"end": 509,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 437,
											"end": 509,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 437,
											"end": 509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 437,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 437,
											"end": 509,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 437,
											"end": 509,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 437,
											"end": 509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 437,
											"end": 509,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 310,
											"end": 432,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 310,
											"end": 432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 310,
											"end": 432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 310,
											"end": 432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 310,
											"end": 432,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 310,
											"end": 432,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 310,
											"end": 432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 310,
											"end": 432,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 310,
											"end": 432,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 310,
											"end": 432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 310,
											"end": 432,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 310,
											"end": 432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 310,
											"end": 432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 310,
											"end": 432,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 310,
											"end": 432,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 310,
											"end": 432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 310,
											"end": 432,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 310,
											"end": 432,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 310,
											"end": 432,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 310,
											"end": 432,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 310,
											"end": 432,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 310,
											"end": 432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 310,
											"end": 432,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 437,
											"end": 509,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 437,
											"end": 509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 478,
											"end": 488,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 488,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 478,
											"end": 488,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 478,
											"end": 488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 478,
											"end": 488,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 478,
											"end": 488,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 478,
											"end": 488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 478,
											"end": 488,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 478,
											"end": 488,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 478,
											"end": 488,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 478,
											"end": 497,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 478,
											"end": 497,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 478,
											"end": 497,
											"name": "PUSH",
											"source": 0,
											"value": "2E1A7D4D"
										},
										{
											"begin": 498,
											"end": 501,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 478,
											"end": 502,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 478,
											"end": 502,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 478,
											"end": 502,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 478,
											"end": 502,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 478,
											"end": 502,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 478,
											"end": 502,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 478,
											"end": 502,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 478,
											"end": 502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 478,
											"end": 502,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 478,
											"end": 502,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 502,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 478,
											"end": 502,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 502,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 502,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 478,
											"end": 502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 478,
											"end": 502,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 478,
											"end": 502,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 478,
											"end": 502,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 478,
											"end": 502,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 478,
											"end": 502,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 478,
											"end": 502,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 478,
											"end": 502,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 478,
											"end": 502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 437,
											"end": 509,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 437,
											"end": 509,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 310,
											"end": 432,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 310,
											"end": 432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 349,
											"end": 353,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 385,
											"end": 386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 373,
											"end": 382,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 373,
											"end": 386,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 365,
											"end": 387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 365,
											"end": 387,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 365,
											"end": 387,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 365,
											"end": 387,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 365,
											"end": 387,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 365,
											"end": 387,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 365,
											"end": 387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 404,
											"end": 425,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 397,
											"end": 425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 397,
											"end": 425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 310,
											"end": 432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 310,
											"end": 432,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1130,
											"end": 1135,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1107,
											"end": 1110,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1137,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1242,
											"end": 1246,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1282,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1269,
											"end": 1278,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1265,
											"end": 1283,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1361,
											"end": 1362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1346,
											"end": 1363,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1377,
											"end": 1520,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1377,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1434,
											"end": 1439,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1465,
											"end": 1471,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1459,
											"end": 1472,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1450,
											"end": 1472,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1450,
											"end": 1472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1481,
											"end": 1514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1508,
											"end": 1513,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1481,
											"end": 1514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1481,
											"end": 1514,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1481,
											"end": 1514,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1481,
											"end": 1514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1520,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1520,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1520,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1526,
											"end": 1877,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1526,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1596,
											"end": 1602,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1645,
											"end": 1647,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1633,
											"end": 1642,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1631,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1620,
											"end": 1643,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1616,
											"end": 1648,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1613,
											"end": 1732,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1613,
											"end": 1732,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1613,
											"end": 1732,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1651,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1651,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1651,
											"end": 1730,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1651,
											"end": 1730,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1651,
											"end": 1730,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1613,
											"end": 1732,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1613,
											"end": 1732,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1771,
											"end": 1772,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1796,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1852,
											"end": 1859,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1843,
											"end": 1849,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1841,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1850,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1796,
											"end": 1860,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1796,
											"end": 1860,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1796,
											"end": 1860,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1860,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1860,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1742,
											"end": 1870,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1877,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1877,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1877,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1877,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1877,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"give()": "9e96a23a",
							"hack(uint256)": "25565cdd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"give\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"hack\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/10_reentranncyhack.sol\":\"ReentrancyHack\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/10_reentranncyhack.sol\":{\"keccak256\":\"0x0bf77cf171fb6736e2693d1d9f91b5a2408d13b849fda12b74beada97363e7c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d456b2de647e18d83949525ff412bf54701042906952d2d11cba5708afeff125\",\"dweb:/ipfs/QmZ9YsqGGJmnvKEmQhxY7PFGFWMQbp439VrP4fzGUdr2Sw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 20,
								"contract": "contracts/10_reentranncyhack.sol:ReentrancyHack",
								"label": "reentrancy",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IReentranncy)14"
							}
						],
						"types": {
							"t_contract(IReentranncy)14": {
								"encoding": "inplace",
								"label": "contract IReentranncy",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/10_reentranncyhack.sol": {
				"ast": {
					"absolutePath": "contracts/10_reentranncyhack.sol",
					"exportedSymbols": {
						"IReentranncy": [
							14
						],
						"ReentrancyHack": [
							52
						]
					},
					"id": 53,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IReentranncy",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 14,
							"linearizedBaseContracts": [
								14
							],
							"name": "IReentranncy",
							"nameLocation": "67:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "2e1a7d4d",
									"id": 8,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "94:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "ammount",
												"nameLocation": "108:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "103:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "103:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "102:14:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "134:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "134:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "133:6:0"
									},
									"scope": 14,
									"src": "85:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 13,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "154:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "_who",
												"nameLocation": "172:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "164:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 9,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "164:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "163:14:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "186:0:0"
									},
									"scope": 14,
									"src": "145:42:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 53,
							"src": "57:132:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ReentrancyHack",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 52,
							"linearizedBaseContracts": [
								52
							],
							"name": "ReentrancyHack",
							"nameLocation": "200:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 20,
									"mutability": "mutable",
									"name": "reentrancy",
									"nameLocation": "234:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 52,
									"src": "221:82:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IReentranncy_$14",
										"typeString": "contract IReentranncy"
									},
									"typeName": {
										"id": 16,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 15,
											"name": "IReentranncy",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 14,
											"src": "221:12:0"
										},
										"referencedDeclaration": 14,
										"src": "221:12:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IReentranncy_$14",
											"typeString": "contract IReentranncy"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307843413034633962644435373137374130424144413165316561453345304536383242323945323846",
												"id": 18,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "260:42:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0xCA04c9bdD57177A0BADA1e1eaE3E0E682B29E28F"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 17,
											"name": "IReentranncy",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 14,
											"src": "247:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IReentranncy_$14_$",
												"typeString": "type(contract IReentranncy)"
											}
										},
										"id": 19,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "247:56:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IReentranncy_$14",
											"typeString": "contract IReentranncy"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 38,
										"nodeType": "Block",
										"src": "355:77:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 29,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 26,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "373:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 27,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "373:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 28,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "385:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "373:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 25,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "365:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "365:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 31,
												"nodeType": "ExpressionStatement",
												"src": "365:22:0"
											},
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 34,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "412:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ReentrancyHack_$52",
																	"typeString": "contract ReentrancyHack"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_ReentrancyHack_$52",
																	"typeString": "contract ReentrancyHack"
																}
															],
															"id": 33,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "404:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 32,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "404:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 35,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "404:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "404:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 24,
												"id": 37,
												"nodeType": "Return",
												"src": "397:28:0"
											}
										]
									},
									"functionSelector": "9e96a23a",
									"id": 39,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "give",
									"nameLocation": "319:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "323:2:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "349:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 22,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "349:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:6:0"
									},
									"scope": 52,
									"src": "310:122:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "468:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 47,
															"name": "val",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "498:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 44,
															"name": "reentrancy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "478:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IReentranncy_$14",
																"typeString": "contract IReentranncy"
															}
														},
														"id": 46,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "withdraw",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 8,
														"src": "478:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) external returns (uint256)"
														}
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "478:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "478:24:0"
											}
										]
									},
									"functionSelector": "25565cdd",
									"id": 51,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hack",
									"nameLocation": "446:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "val",
												"nameLocation": "456:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "451:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "451:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "450:10:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "468:0:0"
									},
									"scope": 52,
									"src": "437:72:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 53,
							"src": "191:320:0",
							"usedErrors": []
						}
					],
					"src": "32:479:0"
				},
				"id": 0
			}
		}
	}
}